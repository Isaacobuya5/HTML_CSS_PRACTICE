.container {
  display: grid;
  /** define three columns for my grid *****/
  /* grid-template-columns: 100px auto 100px; */
  /*** suppose we want all the three columns to grow when browser window is stretched, we can use the "fractions" **/
  /**** by doing this, each and every column is given the same width ***/
  /* grid-template-columns: 1fr 1fr 1fr; */
  /** above is same as below -> the first arguement specifies the number of columns while the second arguement specifies the fractions allocated to each column  **/
  /* grid-template-columns: repeat(3, 1fr); */
  /*** the second column is now assigned a greater width than the first and last columns ***/
  /* grid-template-columns: 1fr 2fr 1fr; */
  /*** height of 50px to each row ****/
  /* grid-template-rows: 50px 50px;  */
  /*** above is same as ****/
  /* grid-template-rows: repeat(2, 50px); */
  /*** short hand is *****/
  grid-template: repeat(2, 50px) / repeat(3, 1fr);
  grid-gap: 4px; /*** creates gaps between the individual grids *****/
}

.container > div,
.container2 > div {
  /* width: 400px;
    height: 30px; */
  text-align: center;
  font-weight: 700;
  color: white;
  padding-top: 5px;
}

.container > div:nth-child(1) {
  background: red;
}

.container > div:nth-child(2) {
  background: blue;
}

.container > div:nth-child(3) {
  background: yellow;
}

.container > div:nth-child(4) {
  background: teal;
}

.container > div:nth-child(5) {
  background: brown;
}

.container > div:nth-child(6) {
  background: orange;
}

.container2 {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: 40px 200px 40px;
  grid-gap: 3px;
}
.container3 > div:nth-child(1),
.container2 > div:nth-child(1) {
  background: red;
}

.container3 > div:nth-child(2),
.container2 > div:nth-child(2) {
  background: blue;
}

.container3 > div:nth-child(3),
.container2 > div:nth-child(3) {
  background: yellow;
}

.container3 > div:nth-child(4),
.container2 > div:nth-child(4) {
  background: teal;
} 

.header {
    /* grid-column-start: 1;
    grid-column-end: 3; */
    grid-column: 2 / -1;
}

.menu {
    grid-row: 1 / 3;
}

.content {
    grid-column: 2 / -1;
}

.footer {
    grid-column: 1 / -1;
}


.container3 {
display: grid;
grid-template-areas: 
"h h h h h h h h h h h h",

;
}
